name: Scrape Melody Playlist (history)

on:
  schedule:
    - cron: "*/5 * * * *"   # každých 5 min
  workflow_dispatch: {}

permissions:
  contents: write

# nedovoľ paralelné behy toho istého workflowu (nebudú si "šlapať po pätách")
concurrency:
  group: scrape-history
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # aby fungoval pull --rebase a správna história

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ⬇️ spustí tvoj scraper a zapíše outputs (added/total/dropped_oldest)
      - name: Run scraper
        id: scrape
        env:
          OUT_PATH: data/playlist.json
          PLAYLIST_LIMIT: 50000
        run: python scrape_melody.py

      # ⬇️ voliteľné: vytlačí čísla aj do logu
      - name: Print numbers
        run: |
          echo "Added:  ${{ steps.scrape.outputs.added }}"
          echo "Total:  ${{ steps.scrape.outputs.total }}"
          echo "Dropped:${{ steps.scrape.outputs.dropped_oldest }}"

      # ⬇️ commit & push len ak sa JSON zmenil; bezpečne s rebase a --force-with-lease
      - name: Commit & push JSON if changed
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add data/playlist.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "scrape: +${{ steps.scrape.outputs.added }} (total ${{ steps.scrape.outputs.total }})"
          git pull --rebase origin main || true
          git push --force-with-lease origin main
